kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-index
  namespace: nginx
  labels:
    app: nginx
    component: frontend
    version: v3.0
  annotations:
    description: "Multi-page NGINX static site with modern design and full navigation"
    last-updated: "2025-08-04"
data:
  index.html: |
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Kubernetes K8s Explained</title>
        <!-- Tailwind CSS for styling -->
        <script src="https://cdn.tailwindcss.com"></script>
        <!-- Google Fonts: Inter -->
        <link rel="preconnect" href="https://fonts.googleapis.com">
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;900&display=swap" rel="stylesheet">
        <style>
            /* Custom styles for animations and effects */
            body {
                font-family: 'Inter', sans-serif;
                background-color: #111827; /* bg-gray-900 */
                color: #F9FAFB; /* text-gray-50 */
                overflow-x: hidden;
            }

            /* Parallax background effect */
            .parallax-bg {
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                z-index: -1;
                background-image: url('https://placehold.co/1920x1080/000000/FFFFFF?text=K8s+Grid');
                background-size: cover;
                background-position: center;
                opacity: 0.1;
                transition: transform 0.2s ease-out;
            }

            /* Header text animation */
            .title-animation {
                animation: text-focus-in 1s cubic-bezier(0.550, 0.085, 0.680, 0.530) both;
            }

            @keyframes text-focus-in {
                0% {
                    filter: blur(12px);
                    opacity: 0;
                }
                100% {
                    filter: blur(0px);
                    opacity: 1;
                }
            }
            
            /* Card entrance animation */
            .card {
                transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
                opacity: 0;
                transform: translateY(30px);
                animation: card-fade-in 0.5s forwards;
            }

            .card:hover {
                transform: translateY(-10px) scale(1.03);
                box-shadow: 0 25px 50px -12px rgba(59, 130, 246, 0.25); /* shadow-xl blue-500/25 */
            }
            
            /* Staggered animation for cards */
            .card:nth-child(1) { animation-delay: 0.2s; }
            .card:nth-child(2) { animation-delay: 0.4s; }
            .card:nth-child(3) { animation-delay: 0.6s; }
            .card:nth-child(4) { animation-delay: 0.8s; }
            .card:nth-child(5) { animation-delay: 1.0s; }
            .card:nth-child(6) { animation-delay: 1.2s; }


            @keyframes card-fade-in {
                to {
                    opacity: 1;
                    transform: translateY(0);
                }
            }

            /* Custom scrollbar for a better look */
            ::-webkit-scrollbar {
                width: 8px;
            }
            ::-webkit-scrollbar-track {
                background: #1F2937; /* bg-gray-800 */
            }
            ::-webkit-scrollbar-thumb {
                background: #3B82F6; /* bg-blue-500 */
                border-radius: 10px;
            }
            ::-webkit-scrollbar-thumb:hover {
                background: #2563EB; /* bg-blue-600 */
            }
        </style>
    </head>
    <body class="bg-gray-900">

        <!-- Parallax Background Div -->
        <div id="parallax-bg" class="parallax-bg"></div>

        <div class="relative z-10">
            <!-- Header Section -->
            <header class="text-center py-16 md:py-24">
                <h1 class="text-5xl md:text-7xl font-black text-white title-animation">
                    <span class="text-blue-400">Kubernetes</span> Explained
                </h1>
                <p class="mt-4 text-lg md:text-xl text-gray-300 max-w-2xl mx-auto title-animation" style="animation-delay: 0.3s;">
                    An interactive guide to the core concepts of the K8s container orchestration system.
                </p>
            </header>

            <!-- Main Content: Concepts Grid -->
            <main class="container mx-auto px-6 pb-24">
                <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
                    
                    <!-- Card 1: Pods -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">Pods</h2>
                        <p class="text-gray-300">
                            The smallest deployable units in Kubernetes. A Pod represents a single instance of a running process in your cluster and can contain one or more containers, such as Docker containers.
                        </p>
                    </div>

                    <!-- Card 2: Services -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">Services</h2>
                        <p class="text-gray-300">
                            An abstract way to expose an application running on a set of Pods as a network service. Services provide a stable IP address and DNS name, allowing other applications to discover and communicate with them.
                        </p>
                    </div>

                    <!-- Card 3: Deployments -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">Deployments</h2>
                        <p class="text-gray-300">
                            Provides declarative updates for Pods and ReplicaSets. You describe a desired state in a Deployment, and the Deployment Controller changes the actual state to the desired state at a controlled rate.
                        </p>
                    </div>

                    <!-- Card 4: Nodes -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">Nodes</h2>
                        <p class="text-gray-300">
                            A worker machine in Kubernetes, previously known as a minion. A node may be a VM or physical machine, depending on the cluster. Each node contains the services necessary to run Pods.
                        </p>
                    </div>

                    <!-- Card 5: Ingress -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">Ingress</h2>
                        <p class="text-gray-300">
                            Manages external access to the services in a cluster, typically HTTP. Ingress can provide load balancing, SSL termination, and name-based virtual hosting. It acts as a smart router or entry point to your cluster.
                        </p>
                    </div>

                    <!-- Card 6: ConfigMaps & Secrets -->
                    <div class="card bg-gray-800/50 backdrop-blur-sm border border-gray-700 rounded-xl p-6">
                        <h2 class="text-2xl font-bold text-blue-400 mb-3">ConfigMaps & Secrets</h2>
                        <p class="text-gray-300">
                            These allow you to decouple configuration and sensitive information from your container images. ConfigMaps store non-confidential data, while Secrets are used for sensitive data like passwords or API keys.
                        </p>
                    </div>

                </div>
            </main>

            <!-- Footer -->
            <footer class="text-center py-8">
                <p class="text-gray-500">Built with HTML, Tailwind CSS, and a touch of JavaScript.</p>
            </footer>
        </div>

        <script>
            // JavaScript for Parallax Effect
            const parallaxBg = document.getElementById('parallax-bg');

            window.addEventListener('scroll', () => {
                const scrollPosition = window.pageYOffset;
                // The '0.1' factor creates a subtle parallax effect.
                // Adjust it for more or less movement.
                parallaxBg.style.transform = `translateY(${scrollPosition * 0.1}px)`;
            });
        </script>

    </body>
    </html>